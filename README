Science Tools for MySQL
=======================

    Science-specific tools and extensions for SQL. Currently the project
contains user defined functions (UDFs) for MySQL including spatial geometry,
photometry, and statistics functions.


Installation prerequisites:
---------------------------

- Python 2.5.x or later   (http://www.python.org/download/)
- MySQL server 5.x        (http://dev.mysql.com/downloads/)
- MySQLdb 1.2.x           (http://sourceforge.net/projects/mysql-python/)
- Mako                    (http://www.makotemplates.org/download.html)

MySQLdb, a Python DB API 2.0 implementation for MySQL, is only required
in order to run the unit tests. The Mako template engine is required only
for developers that wish to rebuild the HTML documentation.
 
In order to install the UDFs, you need write permission to the MySQL server
plug-in directory as well as a MySQL account with admin priviledges.


WARNING:
--------

The following database names are reserved for use by SciSQL:

- scisql                  Contains SciSQL stored procedures.
- scisql_test             Used by SciSQL unit tests.
- scisql_demo             Contains sample data that can be used to
                          excercise the SciSQL UDFs.

The scisql and scisql_demo databases are dropped and re-created during
installation. If you are using these databases for other things,
you must migrate their contents to a different database prior to installing
SciSQL. If you do not, YOU WILL LOSE DATA.


SciSQL configuration:
---------------------

    Run ./configure from the top-level SciSQL directory. Passing --help will
yield a list of configuration options. Here are the ones most likely to require
tweaking:

  --prefix        Set this to the top-level MySQL server install directory
  --mysql-user    Set this to the name of a MySQL admin user
  --mysql-socket  Set this to the name of the MySQL server UNIX socket file

You will be prompted for the MySQL admin user password during configuration.
Connection details, including this password, are stored in
build/c4che/.my.cnf in the MySQL options file format. This allows various
build steps to connect to MySQL without constantly prompting for a password.

Though the .my.cnf file permissions are set such that only the creator is
allowed read/write access, for security reasons it is still recommended to
run `make distclean` once SciSQL has been installed - this will remove the
entire build directory and its contents.


Building and installation:
--------------------------

    SciSQL is built, installed, and uninstalled with the usual make,
make install, and make uninstall commands.

The install command will CREATE the SciSQL UDFs, stored procedures, and
databases (including the scisql_demo database). It will also automatically
run the SciSQL unit tests. You can re-run the tests anytime with `make test`.

The uninstall command DROP the SciSQL UDFs, stored procedures, and databases.


Reporting bugs and getting help:
--------------------------------

    If you encounter test-case failures, or think you've identified a
bug in the SciSQL code, please file a report here:

https://bugs.launchpad.net/scisql/+filebug

    For other help or inquiries, submit your questions here:

https://answers.launchpad.net/scisql/+addquestion

